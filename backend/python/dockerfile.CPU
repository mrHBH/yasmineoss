# Use Ubuntu as base image
FROM ubuntu:22.04

# Avoid timezone prompt during package installation
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC

# Set the working directory
WORKDIR /app

# Update package lists and install basic dependencies first
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    gcc \
    g++ \
    cmake \
    make \
    git \
    wget \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Add Apache Arrow repository
RUN wget https://apache.jfrog.io/artifactory/arrow/ubuntu/apache-arrow-apt-source-latest-jammy.deb \
    && apt-get install -y ./apache-arrow-apt-source-latest-jammy.deb \
    && rm apache-arrow-apt-source-latest-jammy.deb

# Install Arrow and remaining dependencies
RUN apt-get update && apt-get install -y \
    libarrow-dev \
    libarrow-dataset-dev \
    libopenblas-dev \
    libboost-all-dev \
    libthrift-dev \
    libsnappy-dev \
    libgflags-dev \
    libutf8proc-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*


# Install llama-cpp-python and outlines
RUN pip3 install phonemizer torch transformers scipy munch
RUN apt-get update && \
    apt-get install -y \
    ninja-build 
RUN pip3 install llama-cpp-python outlines --no-cache-dir --upgrade


# Initialize git-lfs and clone Kokoro model
RUN apt-get update && apt-get install -y git-lfs espeak-ng && \
    git lfs install  
# Create an initialization script with debug logging
RUN echo '#!/bin/bash\n\
set -x\n\
echo "Starting initialization script"\n\
ls -la /app/kokoro\n\
\n\
echo "Initializing git-lfs"\n\
git lfs install\n\
\n\
if [ ! -d "/app/kokoro/.git" ]; then\n\
    echo "Kokoro repository not found. Cloning..."\n\
    rm -rf /app/kokoro/*\n\
    git clone https://huggingface.co/hexgrad/Kokoro-82M /app/kokoro\n\
    cd /app/kokoro && git lfs pull\n\
    echo "Clone completed. Contents of /app/kokoro:"\n\
    ls -la /app/kokoro\n\
else\n\
    echo "Kokoro repository already exists"\n\
    ls -la /app/kokoro\n\
fi\n\
\n\
echo "Initialization complete. Starting main application..."\n\
exec python3 src/main.py\n\
' > /app/init.sh && chmod +x /app/init.sh
RUN pip3 install uvicorn[standard] fastapi fastapi-cors pylint asyncio pydantic python-dotenv nest-asyncio ipython aiosqlite autopep8 dill --upgrade
RUN pip3 install soundfile
EXPOSE 8000
ENV AM_I_IN_A_DOCKER_CONTAINER Yes
CMD ["/bin/bash", "/app/init.sh"]


# EXPOSE 8000
# ENV AM_I_IN_A_DOCKER_CONTAINER Yes
# CMD ["python3", "src/main.py"]