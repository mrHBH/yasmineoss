# Use Ubuntu as base image
FROM ubuntu:22.04

# Avoid timezone prompt during package installation
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC

# Set the working directory
WORKDIR /app

# Update package lists and install basic dependencies first
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    gcc \
    g++ \
    cmake \
    make \
    git \
    wget \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Add Apache Arrow repository
RUN wget https://apache.jfrog.io/artifactory/arrow/ubuntu/apache-arrow-apt-source-latest-jammy.deb \
    && apt-get install -y ./apache-arrow-apt-source-latest-jammy.deb \
    && rm apache-arrow-apt-source-latest-jammy.deb

# Install Arrow and remaining dependencies
RUN apt-get update && apt-get install -y \
    libarrow-dev \
    libarrow-dataset-dev \
    libopenblas-dev \
    libboost-all-dev \
    libthrift-dev \
    libsnappy-dev \
    libgflags-dev \
    libutf8proc-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN pip3 install poetry

# Copy the pyproject.toml and poetry.lock files into the container
COPY pyproject.toml poetry.lock* ./

# Configure Poetry and install dependencies
RUN poetry config virtualenvs.create false \
    && poetry install --no-interaction --no-ansi

# Install llama-cpp-python and outlines
RUN poetry run pip3 install llama-cpp-python outlines

# Copy the application code into the container
COPY src/ ./src

EXPOSE 8000
ENV AM_I_IN_A_DOCKER_CONTAINER Yes

CMD ["python3", "src/main.py"]