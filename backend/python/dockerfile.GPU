ARG CUDA_VERSION=12.2.2 
# Build stage


FROM nvidia/cuda:12.2.2-devel-ubuntu22.04 as build
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get upgrade -y \
    && apt-get install -y git build-essential \
    python3 python3-pip gcc wget \
    ocl-icd-opencl-dev opencl-headers clinfo \
    libclblast-dev libopenblas-dev \
    && mkdir -p /etc/OpenCL/vendors && echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd

# setting build related env vars
ENV CUDA_DOCKER_ARCH=all
ENV GGML_CUDA=1
# Install depencencies
RUN python3 -m pip install --upgrade pip pytest cmake scikit-build setuptools  sse-starlette pydantic-settings starlette-context

# Install llama-cpp-python (build with cuda)
RUN CMAKE_ARGS="-DGGML_CUDA=on" pip install llama-cpp-python   --no-cache-dir -vvv --upgrade

RUN python3 -m pip install --upgrade guidance
#install poetry and dependencies without creating a virtualenv
RUN python3 -m pip install poetry
COPY pyproject.toml  ./
RUN poetry config virtualenvs.create false \
    && poetry install --no-interaction --no-ansi




WORKDIR /app 



CMD ["python3", "src/main.py"]
